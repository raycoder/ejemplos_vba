==============================================================
Dim ap_leve_1 As New Collection, ap_level_2 As New Collection
https://www.youtube.com/watch?v=PrGchDgF3m4
==============================================================
!!!! cargar libreria: Microsoft Scripting Runtime

Dim dict as New Dictionary
dict.add "apple", 60
dict.add "orange", 70

# no se pueden cargar dos veces

if dict.exists("apple") then
  dict("apple") = 40
else
  dict.add "apple", 60
end if

una forma alternativa de hacer lo mismo en una linea:

dict("apple")=40 'si existe cambia el valor, de lo contrario lo agrega y asigna

==============================================================
Excel VBA Dictionary vs Collection (2/4)
https://www.youtube.com/watch?v=eAu9ePz1tgM
==============================================================

Dim coll as New Collection
Dim dict as new Dictionary

dict.add "apple", 56
coll.add 56, "apple"

# la clave es unica y es lo importante, mientras que en un collection lo importante es la posicion
# en un diccionario se puede evaluar si una clave existe, en una coll no
# para chequear si un elemento existe en una coleccion se hace por error
# lo mas importante en las coll es que no se puede cambiar un valor asignado
# pero la coleccion se puede acceder a un item por posicion y por eso la lista se puede editar
# en que posicion esta cada elemento


==============================================================
A Real-World VBA Dictionary Example (3/4)
https://www.youtube.com/watch?v=o8fSY_4p93s
==============================================================

sub dict_main()

dim dict as dictionary

'lee los datos y crea el dict
set dic = readata()

'escribe el resumen
call writeDict()

end sub

private function readata() as new dictionary
Dim dict as new dictionary

dim rg as range
set rg = sheets1.range("A1").currentregion.value

dim i as long, customerID as string, amount as currency, volume as long
for i = 2 to rg.rows.count
  customerID=rg(i,1).value
  amount=rg(i,4).value
  volume=rg(i,5).value
  
  if dict.exists(customerID) = true then
    set oCustomer = dict(customerID)
  else
    set oCustomer? new clsCustomer
    dict.add customerId, oCustomer
  end if
  
  oCustomer.amount = oCustomer.amount + amount
  oCustomer.volume = oCustomer.volume + volume
  
next i
set readata = dict
end function

sub writeDict (dict as Dictionary)
  
  dim rgout as range
  set rgout= shdata.range("B2").currentregion
  rgout.offset(1).clearcontents
    
  Dim key as variant, oCustomer as clsCustomer, row as long
  row = 2
    
  for each key in dict
    set oCustomer = dict(key)
    rgout.cells(row,1).value=key
    rgout.cells(row,2).value=oCustomer.amount
    rgout.cells(row,3).value=oCustomer.volume
    row=row+1
  next key 

end sub

module class: clsCustomer

Public customerID as String
Public Name as string
Public surname as string
Public amount as currency
Public volume as long


==============================================================
How to Compare 2 Lists using Excel VBA(4/4)
https://www.youtube.com/watch?v=P_UVvYW2xto
==============================================================

Public Enum eResultType
  list1only=1
  both=2
  list2Only=3
end enum

sub maincompare()

  dim resultType as eResultType
  resultType = eResultType.both

  Dim rgBase as Range, rgCompare as range, rgResult as range
  set rgBase = shData.Range("A1:A9")
  set rgCompare = shData.Range("B2:B9")
  set rgResult = shData.Range("D1")
  
  dim dictBase as dictionary
  set dictBase = readList(rgBase.value)

  dim dictResult as dictionary
  set dictResult= CompareList(dictBase, rgCompare.value, resulType)
  
  printDictionary dictResults

end sub

Sub PrintDictionary(dic as dictionary)
  
  Dim key as Variant
  for each key in dict
    debug.print key ', dict(key)
  next key

end sub

public function ReadList(arr as variant) as Dictionary
  Dim dict as new dictionary
  
  dim i as long
  for i = lBound(arr) to ubound(arr)
    dict(arr(i,1))=0 'igual a cero porque solo esta buscando las claves, no importa el valor
  next i  
  
  set ReadList=dict
end function

public function CompareList(dict as dictionary, arr as variant, resulType as eResultType) as Dictionary
  Dim dictResult as new dictionary
  Dim i as long, item as variant
  for i= lbound(arr) to ubound(arr)
    item=arr(i,1)
    if dict.exists(item)=true then
      dictResult(item)=0
      dict.Remove item
    end if
  next i
  
  if resultType=both then
    set compareLists=dicResult
  elseif resultType = list1Only then
    set CompareLists=dict
  end if
  
end function

Sub WriteResult(rg as Range, dict as dictionary, resultType as eResultType)
  rg.currentregion.clearcontents
  rg.value = "Result"
  rg.offset(1).resize(dict.count,1).value=worksheetFunction.Transpose(dict.Keys)
end sub









